#ifndef TEXENGINE_UTILENUM_H_INCLUDED
#define TEXENGINE_UTILENUM_H_INCLUDED

namespace TEXEngine {
	namespace Util {

enum TEXENG_GRADIENT_TYPE
{
	TEXENG_GRADIENT_PERPIXEL,
	TEXENG_GRADIENT_RADIAL_A
};

enum TEXENG_PRIMITIVE_TYPE
{
	TEXENG_PRIMITIVE_POINT,
	TEXENG_PRIMITIVE_LINE,
	TEXENG_PRIMITIVE_TRIANGLE
};

enum TEXENG_MATRIX_TYPE
{
	TEXENG_MATRIX_WORLD,
	TEXENG_MATRIX_VIEW,
	TEXENG_MATRIX_MODELVIEW,
	TEXENG_MATRIX_PROJECTION,
	TEXENG_MATRIX_MODELVIEW_PROJECTION
};

enum TEXENG_RENDERING_TYPE
{
	TEXENG_RENDERING_WIREFRAME,
	TEXENG_RENDERING_FILL,
};

enum TEXENG_PARAMETER_TYPE /*Written mainly for passing shader parameter*/
{
	TEXENG_PARAMETER_FLOAT,
	TEXENG_PARAMETER_MATRIX4F,
	TEXENG_PARAMETER_VECTOR2F,
	TEXENG_PARAMETER_VECTOR3F,
	TEXENG_PARAMETER_VECTOR4F,
	TEXENG_PARAMETER_TEXTURE
};

/*Used to define how to transform a matrix when passing it into shader*/
enum TEXENG_MATRIX_TRANSFORM_TYPE
{
	TEXENG_MATRIX_TRANSFORM_IDENTITY,
	TEXENG_MATRIX_TRANSFORM_TRANSPOSE,
	TEXENG_MATRIX_TRANSFORM_INVERSE,
	TEXENG_MATRIX_TRANSFORM_INVERSE_TRANSPOSE
};

	}/* namespace Util */
} /* Namespace TEXEngine */

#endif /* TEXENGINE_UTILENUM_H_INCLUDED */